#
# PySNMP MIB module SYNOLOGY-NFS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./SYNOLOGY-NFS-MIB.txt
# Produced by pysmi-1.1.11 at Wed Jan 10 17:46:14 2024
# On host pablo-VBox platform Linux version 6.2.0-39-generic by user pablo
# Using Python version 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Counter64, MibIdentifier, Integer32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, Counter32, Gauge32, Unsigned32, TimeTicks, NotificationType, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "MibIdentifier", "Integer32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "Counter32", "Gauge32", "Unsigned32", "TimeTicks", "NotificationType", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nfs = ModuleIdentity((1, 3, 6, 1, 4, 1, 6574, 107))
nfs.setRevisions(('2018-08-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: nfs.setRevisionsDescriptions(('First draft.',))
if mibBuilder.loadTexts: nfs.setLastUpdated('201808100000Z')
if mibBuilder.loadTexts: nfs.setOrganization('www.synology.com')
if mibBuilder.loadTexts: nfs.setContactInfo('Synology Inc. Email: snmp@synology.com')
if mibBuilder.loadTexts: nfs.setDescription('Characteristics of the nfs information')
synology = MibIdentifier((1, 3, 6, 1, 4, 1, 6574))
nfsTable = MibTable((1, 3, 6, 1, 4, 1, 6574, 107, 1), )
if mibBuilder.loadTexts: nfsTable.setStatus('current')
if mibBuilder.loadTexts: nfsTable.setDescription('Table of nfs data.')
nfsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1), ).setIndexNames((0, "SYNOLOGY-NFS-MIB", "nfsIndex"))
if mibBuilder.loadTexts: nfsEntry.setStatus('current')
if mibBuilder.loadTexts: nfsEntry.setDescription('An entry containing nfs information.')
nfsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: nfsIndex.setStatus('current')
if mibBuilder.loadTexts: nfsIndex.setDescription('Reference index for each observed device.')
nfsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsName.setStatus('current')
if mibBuilder.loadTexts: nfsName.setDescription('nfs name')
nfsTotalMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsTotalMaxLatency.setStatus('current')
if mibBuilder.loadTexts: nfsTotalMaxLatency.setDescription('The number of nfs total max latency.')
nfsReadMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsReadMaxLatency.setStatus('current')
if mibBuilder.loadTexts: nfsReadMaxLatency.setDescription('The number of nfs read max latency.')
nfsWriteMaxLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsWriteMaxLatency.setStatus('current')
if mibBuilder.loadTexts: nfsWriteMaxLatency.setDescription('The number of nfs write max latency.')
nfsTotalOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsTotalOPS.setStatus('current')
if mibBuilder.loadTexts: nfsTotalOPS.setDescription('The number of nfs total OPS.')
nfsReadOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsReadOPS.setStatus('current')
if mibBuilder.loadTexts: nfsReadOPS.setDescription('The number of nfs read OPS.')
nfsWriteOPS = MibTableColumn((1, 3, 6, 1, 4, 1, 6574, 107, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nfsWriteOPS.setStatus('current')
if mibBuilder.loadTexts: nfsWriteOPS.setDescription('The number of nfs write OPS.')
nfsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6574, 107, 2))
nfsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6574, 107, 2, 1))
nfsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6574, 107, 2, 2))
nfsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6574, 107, 2, 1, 1)).setObjects(("SYNOLOGY-NFS-MIB", "nfsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfsCompliance = nfsCompliance.setStatus('current')
if mibBuilder.loadTexts: nfsCompliance.setDescription('The compliance statement for nfs entities which implement the SYNOLOGY NFS MIB.')
nfsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6574, 107, 2, 2, 1)).setObjects(("SYNOLOGY-NFS-MIB", "nfsName"), ("SYNOLOGY-NFS-MIB", "nfsTotalMaxLatency"), ("SYNOLOGY-NFS-MIB", "nfsReadMaxLatency"), ("SYNOLOGY-NFS-MIB", "nfsWriteMaxLatency"), ("SYNOLOGY-NFS-MIB", "nfsTotalOPS"), ("SYNOLOGY-NFS-MIB", "nfsReadOPS"), ("SYNOLOGY-NFS-MIB", "nfsWriteOPS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nfsGroup = nfsGroup.setStatus('current')
if mibBuilder.loadTexts: nfsGroup.setDescription('A collection of objects providing basic information of an synology nfs entity.')
mibBuilder.exportSymbols("SYNOLOGY-NFS-MIB", nfsReadMaxLatency=nfsReadMaxLatency, nfsWriteOPS=nfsWriteOPS, nfsIndex=nfsIndex, nfsWriteMaxLatency=nfsWriteMaxLatency, nfsTable=nfsTable, nfsTotalOPS=nfsTotalOPS, synology=synology, nfsConformance=nfsConformance, nfsReadOPS=nfsReadOPS, nfsGroup=nfsGroup, nfsName=nfsName, nfsTotalMaxLatency=nfsTotalMaxLatency, nfsCompliances=nfsCompliances, nfs=nfs, nfsEntry=nfsEntry, nfsGroups=nfsGroups, nfsCompliance=nfsCompliance, PYSNMP_MODULE_ID=nfs)
